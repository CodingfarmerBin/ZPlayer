if (isComponent) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

//获取config文件中的配置 rootProject 项目的主对象
def androidConfig = rootProject.ext.defaultConfig
def appIdConfig = rootProject.ext.appIdConfig
def dependenciesConfig = rootProject.ext.dependencies

android {
    compileSdkVersion rootProject.ext.defaultConfig.compileSdkVersion
    defaultConfig {
        //如果moudle为组件  配置组件的app ID
        if (isComponent) {
            applicationId appIdConfig.shoot
        }
        minSdkVersion androidConfig.minSdkVersion
        targetSdkVersion androidConfig.targetSdkVersion
        versionCode androidConfig.versionCode
        versionName androidConfig.versionName
        testInstrumentationRunner androidConfig.junit

        //ARouter配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation dependenciesConfig.fileTree
    implementation dependenciesConfig.kotlin
    testImplementation dependenciesConfig.junit
    androidTestImplementation dependenciesConfig.runner
    androidTestImplementation dependenciesConfig.espresso
    implementation dependenciesConfig.appcompat
    implementation dependenciesConfig.constraintlayout
    implementation dependenciesConfig.arouter
    annotationProcessor  dependenciesConfig.arouterCompiler
}
